{"version":3,"sources":["login.js"],"names":["ctx","data","users","socket","response","event","logger","instance","username","password","args","AUTH_URL","meta","resp","url","method","headers","token","json","user_key","error","respondWithInvalidCredentials","message"],"mappings":";;;;;;AACA;;;;AAEA;;;;;;2cAHA;;;;+BAIe,WAAMA,GAAN,EAAa;AAC1B,UAAM,EAACC,IAAD,EAAOC,KAAP,EAAcC,MAAd,EAAsBC,QAAtB,EAAgCC,KAAhC,EAAuCC,MAAvC,EAA+CC,QAA/C,KAA2D,6BAAOP,GAAP,CAAjE;AACA,UAAM,EAACQ,QAAD,EAAWC,QAAX,KAAuBT,IAAIU,IAAjC;AACA,UAAMC,WAAY,uCAAsCX,IAAIY,IAAJ,CAASL,QAAS,cAA1E;AACA,QAAI;AACF,YAAMM,OAAO,MAAM,qBAAM;AACvBC,aAAKH,QADkB;AAEvBI,gBAAQ,MAFe;AAGvBd,cAAM,EAACO,QAAD,EAAWC,QAAX,EAHiB;AAIvBO,iBAAS;AACP,0BAAgB,kBADT;AAEP,uBAAahB,IAAIY,IAAJ,CAASK;AAFf;AAJc,OAAN,CAAnB;AASA,aAAOb,SAASc,IAAT,CAAc;AACnBV,kBAAUK,KAAKZ,IAAL,CAAUO,QADD;AAEnBS,eAAOJ,KAAKZ,IAAL,CAAUkB;AAFE,OAAd,CAAP;AAID,KAdD,CAcE,OAAOC,KAAP,EAAc;AACd,aAAOC,+BAAP;AACD;AACD,aAASA,6BAAT,GAA0C;AACxC,aAAOjB,SAASc,IAAT,CAAc,EAACI,SAAS,gCAAV,EAAd,EAA2D,GAA3D,CAAP;AACD;AACF,G","file":"login.js","sourcesContent":["/* global META, ARGS */\nimport fetch from 'axios'\n\nimport Server from 'syncano-server'\nexport default async ctx => {\n  const {data, users, socket, response, event, logger, instance} = Server(ctx)\n  const {username, password} = ctx.args\n  const AUTH_URL = `https://api.syncano.io/v2/instances/${ctx.meta.instance}/users/auth/`\n  try {\n    const resp = await fetch({\n      url: AUTH_URL,\n      method: 'POST',\n      data: {username, password},\n      headers: {\n        'Content-Type': 'application/json',\n        'X-API-KEY': ctx.meta.token\n      }\n    })\n    return response.json({\n      username: resp.data.username,\n      token: resp.data.user_key\n    })\n  } catch (error) {\n    return respondWithInvalidCredentials()\n  }\n  function respondWithInvalidCredentials () {\n    return response.json({message: 'Given credentials are invalid.'}, 400)\n  }\n}\n"]}