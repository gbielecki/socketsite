{"version":3,"sources":["addSocket.js"],"names":["ctx","response","data","users","args","socketName","socketDescription","token","console","log","user","meta","socket","create","name","description","author","username","then","list","socketList","json","message","wiecejWiadomosc"],"mappings":";;;;;;AAAA;;;;;;kBAEgBA,GAAD,IAAS;AACtB,QAAM,EAACC,QAAD,EAAUC,IAAV,EAAeC,KAAf,KAAwB,6BAAQH,GAAR,CAA9B;;AAEA,MAAIA,IAAII,IAAJ,CAASC,UAAT,IAAuBL,IAAII,IAAJ,CAASE,iBAAhC,IAAqDN,IAAII,IAAJ,CAASG,KAAlE,EAAyE;AACvEC,YAAQC,GAAR,CAAYT,IAAII,IAAJ,CAASG,KAArB;AACA,QAAG;AACC,YAAM,EAAEG,IAAF,KAAWV,IAAIW,IAArB;AACAH,cAAQC,GAAR,CAAYC,IAAZ;AACER,WAAKU,MAAL,CAAYC,MAAZ,CAAmB;AACnBC,cAAMd,IAAII,IAAJ,CAASC,UADI;AAEnBU,qBAAaf,IAAII,IAAJ,CAASE,iBAFH;AAGnBU,gBAAQN,KAAKO,QAHM,EAAnB,EAIHC,IAJG,CAIE,MAAK;AACP,eAAOhB,KAAKU,MAAL,CAAYO,IAAZ,EAAP;AACH,OANG,EAOHD,IAPG,CAOEE,cAAc;AACdnB,iBAASoB,IAAT,CAAcD,UAAd;AACD,OATD;AAUL,KAbD,CAcA,OAAM,EAACE,OAAD,EAAN,EAAiB;AACb,aAAOrB,SAASoB,IAAT,CAAc,EAAC,SAAS,GAAV,EAAd,EAA8B,GAA9B,CAAP;AACD;AAEJ,GApBD,MAoBO,IAAGrB,IAAII,IAAJ,CAASC,UAAT,IAAuBL,IAAII,IAAJ,CAASE,iBAAnC,EAAqD;AAC1DL,aAASoB,IAAT,CAAc;AACVC,eAAS,2BADC;AAEVC,uBAAiBvB,IAAIW;AAFX,KAAd,EAGK,GAHL;AAID,GALM,MAKA;AACLV,aAASoB,IAAT,CAAc;AACZC,eAAS;AADG,KAAd,EAEG,GAFH;AAGD;AACF,C","file":"addSocket.js","sourcesContent":["import Syncano from 'syncano-server'\r\n\r\nexport default (ctx) => {\r\n  const {response,data,users} = Syncano(ctx)\r\n\r\n  if (ctx.args.socketName && ctx.args.socketDescription && ctx.args.token) {\r\n    console.log(ctx.args.token);\r\n    try{\r\n        const { user } = ctx.meta\r\n        console.log(user);\r\n          data.socket.create({\r\n          name: ctx.args.socketName, \r\n          description: ctx.args.socketDescription, \r\n          author: user.username})\r\n      .then(()=> {\r\n          return data.socket.list()\r\n      })\r\n      .then(socketList => {\r\n            response.json(socketList)\r\n          })\r\n    }\r\n    catch({message}) {\r\n        return response.json({\"cipak\": 123}, 400)\r\n      }\r\n    \r\n  } else if(ctx.args.socketName && ctx.args.socketDescription){\r\n    response.json({\r\n        message: 'Autentykacja nie dziala?!',\r\n        wiecejWiadomosc: ctx.meta\r\n      }, 400)\r\n  } else {\r\n    response.json({\r\n      message: 'You have to send \"socketName\" and \"socketDescription\" arguments!'\r\n    }, 400)\r\n  }\r\n}\r\n"]}