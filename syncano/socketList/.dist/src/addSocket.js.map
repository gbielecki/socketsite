{"version":3,"sources":["addSocket.js"],"names":["ctx","data","response","args","socketName","socketDescription","console","log","meta","json","user","message"],"mappings":";;;;;;AAAA;;;;;;kBAEgBA,GAAD,IAAS;AACtB,QAAM,EAACC,IAAD,EAAMC,QAAN,KAAkB,6BAAQF,GAAR,CAAxB;;AAEA,MAAIA,IAAIG,IAAJ,CAASC,UAAT,IAAuBJ,IAAIG,IAAJ,CAASE,iBAApC,EAAuD;;AAErDC,YAAQC,GAAR,CAAYP,IAAIQ,IAAhB;AACAN,aAASO,IAAT,CAAc,EAACC,MAAMV,GAAP,EAAd,EAA0B,GAA1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAfD,MAeO;AACLE,aAASO,IAAT,CAAc;AACZE,eAAS;AADG,KAAd,EAEG,GAFH;AAGD;AACF,C","file":"addSocket.js","sourcesContent":["import Syncano from 'syncano-server'\r\n\r\nexport default (ctx) => {\r\n  const {data,response} = Syncano(ctx)\r\n\r\n  if (ctx.args.socketName && ctx.args.socketDescription) {\r\n      \r\n    console.log(ctx.meta);\r\n    response.json({user: ctx},200);\r\n    // data.socket.create({\r\n    //     name: ctx.args.socketName, \r\n    //     description: ctx.args.socketDescription, \r\n    //     author: 'val'\r\n    //   })\r\n    //   .then(()=> {\r\n    //     return data.socket.list()\r\n    //   })\r\n    //   .then(sockets => {\r\n    //     response.json(sockets)\r\n    //   })\r\n  } else {\r\n    response.json({\r\n      message: 'You have to send \"socketName\" and \"socketDescription\" arguments!'\r\n    }, 400)\r\n  }\r\n}\r\n"]}